spring.application.name=todolist

spring.data.redis.host=my-redis-server
spring.data.redis.password=1234
spring.data.redis.port=6600

# \u9019\u500B\u53C3\u6578\u7528\u4F86\u8A2D\u5B9A Swagger UI \u7684\u8A2A\u554F\u8DEF\u5F91\u3002\u9810\u8A2D\u60C5\u6CC1\u4E0B\uFF0CSwagger UI \u7684\u8DEF\u5F91\u662F /swagger-ui/index.html
springdoc.swagger-ui.path=/my-custom-swagger-ui

# \u9019\u500B\u53C3\u6578\u7528\u4F86\u8A2D\u5B9A\u751F\u6210\u7684 OpenAPI \u6587\u6A94\u7684\u8A2A\u554F\u8DEF\u5F91\u3002\u9810\u8A2D\u60C5\u6CC1\u4E0B\uFF0C\u9019\u500B\u8DEF\u5F91\u662F /v3/api-docs
springdoc.api-docs.path=/my-api-docs

# \u9019\u500B\u53C3\u6578\u7528\u4F86\u6307\u5B9A SpringDoc \u61C9\u8A72\u6383\u63CF\u54EA\u4E9B\u5305\u4F86\u751F\u6210 API \u6587\u6A94\u3002\u5982\u679C\u4E0D\u6307\u5B9A\uFF0CSpringDoc \u6703\u6383\u63CF\u6240\u6709\u7684\u5305
springdoc.packages-to-scan=com.demo.todolist.controller

# \u9019\u500B\u53C3\u6578\u7528\u4F86\u6307\u5B9A\u54EA\u4E9B\u8DEF\u5F91\u61C9\u8A72\u5305\u542B\u5728\u751F\u6210\u7684 OpenAPI \u6587\u6A94\u4E2D\u3002\u9019\u5728\u4F60\u53EA\u60F3\u8981\u751F\u6210\u7279\u5B9A\u8DEF\u5F91\u7684 API \u6587\u6A94\u6642\u975E\u5E38\u6709\u7528\u3002
springdoc.paths-to-match=/api/todos/**

# \u9019\u500B\u53C3\u6578\u7528\u4F86\u8A2D\u5B9A\u662F\u5426\u5728 Swagger UI \u4E2D\u986F\u793A\u6BCF\u500B API \u8ACB\u6C42\u7684\u6301\u7E8C\u6642\u9593
springdoc.swagger-ui.display-request-duration=true

# \u555F\u7528 H2 \u63A7\u5236\u53F0
spring.h2.console.enabled=true

# \u8CC7\u6599\u5EAB URL
#spring.datasource.url=jdbc:postgresql://aws-0-ap-northeast-1.pooler.supabase.com:6543/postgres?user=[user]&password=[password]
spring.datasource.url=jdbc:h2:~/test

# \u9A45\u52D5\u7A0B\u5F0F\u985E\u5225\u540D\u7A31
spring.datasource.driver-class-name=org.h2.Driver

# \u8CC7\u6599\u5EAB\u7528\u6236\u540D
spring.datasource.username=sa

# \u8CC7\u6599\u5EAB\u5BC6\u78BC
spring.datasource.password=

# H2 \u63A7\u5236\u53F0\u8DEF\u5F91
spring.h2.console.path=/h2-console

## \u8868\u793A\u6BCF\u6B21\u61C9\u7528\u7A0B\u5F0F\u555F\u52D5\u6642\u90FD\u6703\u57F7\u884C\u521D\u59CB\u5316\u7684 script
#spring.sql.init.mode=always
#
## \u6307\u5B9A\u4E86\u8CC7\u6599\u5EAB schema \u521D\u59CB\u5316 script \u7684\u4F4D\u7F6E
#spring.sql.init.schema-locations=classpath:schema.sql

#spring.security.user.name=cash
#spring.security.user.password=abc123!
#spring.security.user.roles=ADMIN

# \u6BCF\u6B21\u61C9\u7528\u7A0B\u5F0F\u555F\u52D5\uFF0C\u81EA\u52D5\u5EFA\u7ACB table (\u5148\u522A\u9664\u5F8C\u65B0\u589E)
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true

# JWT \u7528\u65BC\u7C3D\u540D\u548C\u9A57\u8B49
jwt.secret=0191eb1feacf719c898518c598134bba4ac6dead4464943885810c7d3938c26
# JWT token \u7684\u6709\u6548\u671F\u9593\uFF0C\u4EE5\u79D2\u70BA\u55AE\u4F4D\uFF08\u9019\u88E1\u8A2D\u7F6E\u70BA 24 \u5C0F\u6642\uFF09
jwt.expiration=86400

# \u6E2C\u8A66\u4F7F\u7528\uFF0C\u53EF\u4EE5\u5168\u90E8\u6253\u958B\u770B\u770B
management.endpoints.web.exposure.include=*
# \u5BE6\u52D9\u4E0A\u6703\u6839\u64DA\u9700\u8981\u6253\u958B
#management.endpoints.web.exposure.include=health,info,metrics,env

# \u662F\u4E0D\u662F\u8981\u986F\u793A\u5B8C\u6574\u7684 health \u8CC7\u6599
management.endpoint.health.show-details=always

# \u662F\u5426\u555F\u7528\u76F8\u95DC info \u8CC7\u8A0A
management.info.java.enabled=true
management.info.os.enabled=true

# \u662F\u5426\u5448\u73FE\u76F8\u95DC env \u7684\u5167\u5BB9
management.endpoint.env.show-values=always